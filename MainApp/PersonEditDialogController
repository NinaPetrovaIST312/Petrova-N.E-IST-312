package ch.makery.address.view;

import javafx.fxml.FXML;
import javafx.scene.control.Alert;
import javafx.scene.control.Alert.AlertType;
import javafx.scene.control.TextField;
import javafx.stage.Stage;
import ch.makery.address.model.Person;
import ch.makery.address.util.DateUtil;


public class PersonEditDialogController {
	@FXML
	private TextField nameField;
	@FXML
	private TextField salaryField;
	@FXML
	private TextField fullNameField;
	@FXML
	private TextField birthdayField;
	@FXML
	private TextField phoneNumberField;
	@FXML
	private TextField addressField;

	private Stage dialogStage;
	private Person person;
	private boolean okClicked = false;

	/**
	 * Инициализирует класс-контроллер. Этот метод вызывается автоматически
	 * после того, как fxml-файл будет загружен.
	 */
	@FXML
	private void initialize() {
	}

	/**
	 * Устанавливает сцену для этого окна.
	 * 
	 * @param dialogStage
	 */
	public void setDialogStage(Stage dialogStage) {
	    this.dialogStage = dialogStage;
	}

	/**
	 * Задаёт адресата, информацию о котором будем менять.
	 * 
	 * @param person
	 */
	public void setPerson(Person person) {
	    this.person = person;

	    nameField.setText(person.getName());
	    salaryField.setText(Double.toString(person.getSalary()));
	    fullNameField.setText(person.getFullName());
	    birthdayField.setText(DateUtil.format(person.getBirthday()));
	    birthdayField.setPromptText("dd.mm.yyyy");
	    phoneNumberField.setText(person.getPhoneNumber());
	    addressField.setText(person.getAddress());
	}

	/**
	 * Returns true, если пользователь кликнул OK, в другом случае false.
	 * 
	 * @return
	 */
	public boolean isOkClicked() {
	    return okClicked;
	}

	/**
	 * Вызывается, когда пользователь кликнул по кнопке OK.
	 */
	@FXML
	private void handleOk() {
	    if (isInputValid()) {
	        person.setName(nameField.getText());
	        person.setSalary(Double.parseDouble(salaryField.getText()));
	        person.setFullName(fullNameField.getText());
	        person.setBirthday(DateUtil.parse(birthdayField.getText()));
	        person.setPhoneNumber(phoneNumberField.getText());
	        person.setAddress(addressField.getText());

	        okClicked = true;
	        dialogStage.close();
	    }
	}

	/**
	 * Вызывается, когда пользователь кликнул по кнопке Cancel.
	 */
	@FXML
	private void handleCancel() {
	    dialogStage.close();
	}

	/**
	 * Проверяет пользовательский ввод в текстовых полях.
	 * 
	 * @return true, если пользовательский ввод корректен
	 */
	private boolean isInputValid() {
	    String errorMessage = "";

	    if (nameField.getText() == null || nameField.getText().length() == 0) {
	        errorMessage += "No valid name!\n"; 
	    }
	    if (salaryField.getText() == null || salaryField.getText().length() == 0) {
	        errorMessage += "No valid salary!\n"; 
	    } else {
	        try {
	            Double.parseDouble(salaryField.getText());
	        } catch (NumberFormatException e) {
	            errorMessage += "No valid salary (must be a number)!\n";
	        }
	    }
	    if (fullNameField.getText() == null || fullNameField.getText().length() == 0) {
	        errorMessage += "No valid full name!\n"; 
	    }
	    if (birthdayField.getText() == null || birthdayField.getText().length() == 0) {
	        errorMessage += "No valid birthday!\n";
	    } else {
	        if (!DateUtil.validDate(birthdayField.getText())) {
	            errorMessage += "No valid birthday. Use the format dd.mm.yyyy!\n";
	        }
	    }
	    if (phoneNumberField.getText() == null || phoneNumberField.getText().length() == 0) {
	        errorMessage += "No valid phone number!\n"; 
	    }
	    if (addressField.getText() == null || addressField.getText().length() == 0) {
	        errorMessage += "No valid address!\n"; 
	    }

	    if (errorMessage.length() == 0) {
	        return true;
	    } else {
	        Alert alert = new Alert(AlertType.ERROR);
	        alert.initOwner(dialogStage);
	        alert.setTitle("Invalid Fields");
	        alert.setHeaderText("Please correct invalid fields");
	        alert.setContentText(errorMessage);
	        
	        alert.showAndWait();
	        
	        return false;
	    }
	}

}
